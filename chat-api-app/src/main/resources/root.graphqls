type Query {
    getAllRooms: [Room]
    getAllUsers: [User]
    getRoom(id:ID!): Room
    getRoomMessages(roomId:ID!): [ChatMessage]
}

type Mutation {
	createRoom(name: String!): Room!
	createUser(name: String!): User!
	createChatMessage(userId:ID!,roomId:ID!,message:String!): ChatMessage!
}

type Subscription {
    dummyUpdates(roomId:ID!) : DummyUpdate!
    newChatMessages(roomId:ID!) : ChatMessage!
}

type DummyUpdate {
    dateTime : String
}

type ChatMessage {
	id: ID!
	message: String!
	user: User!
	room: Room!
}

type Room {
	id: ID !
	name: String !
	chatMessages: [ChatMessage]
	# expensive call
	relevance: Float! 
}

type User {
	id: ID !
	name: String !
}